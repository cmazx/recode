version: '3'

# Define services
services:
  worker:
    &app
    env_file: .env
    build:
      context: ../../
      dockerfile: .devops/docker/Dockerfile
    restart: unless-stopped
    depends_on:
      - db
      - kafka
      - storage
    links:
      - db
      - kafka
      - storage
    command: [ "./main", "worker" ]
    labels:
      traefik.enable: '1'
      traefik.frontend.rule: 'Host:worker.recode.box'
      traefik.docker.network: 'router'
      traefik.port: '8080'
    networks:
      - router
      - default
  api:
    <<: *app
    labels:
      traefik.enable: '1'
      traefik.frontend.rule: 'Host:api.recode.box'
      traefik.docker.network: 'router'
      traefik.port: '8080'
    command: [ "./main", "api" ]
  db:
    env_file: .env
    image: postgres:latest
    ports:
      - "5455:5432"
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - 'fs_database:/var/lib/postgresql/data'
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    links:
      - zookeeper
    ports:
      - "28092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    labels:
      traefik.enable: '1'
      traefik.frontend.rule: 'Host:kafka.recode.box'
      traefik.docker.network: 'router'
      traefik.port: '8080'
    networks:
      - router
      - default
    links:
      - kafka
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_NAME: leader-id
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  storage:
    image: minio/minio
    labels:
      traefik.enable: '1'
      traefik.frontend.rule: 'Host:storage.recode.box'
      traefik.docker.network: 'router'
      traefik.port: '80'
    networks:
      - router
      - default
    ports:
      - ${S3_STORAGE_ENDPOINT_PORT}:9000
    environment:
      MINIO_ACCESS_KEY: ${S3_STORAGE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${S3_STORAGE_SECRET_KEY}
    entrypoint: /bin/sh -c "true \
      && mkdir -p '/data/${S3_STORAGE_BUCKET_NAME}' \
      && minio server /data --console-address ':80'"
volumes:
  fs_database:
networks:
  router:
    external:
      name: router
